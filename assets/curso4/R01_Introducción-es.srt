1
00:00:02,800 --> 00:00:06,919
Bueno, básicamente lo que se presenta es

2
00:00:04,440 --> 00:00:08,200
una herramienta software que intenta

3
00:00:06,919 --> 00:00:10,120
acelerar el desarrollo de aplicaciones

4
00:00:08,200 --> 00:00:12,360
multirrobot, aplicaciones en las que

5
00:00:10,120 --> 00:00:14,879
intervengan de uno hasta cuatro robots.

6
00:00:12,360 --> 00:00:16,640
El objetivo principal sería intentar

7
00:00:14,879 --> 00:00:17,760
potenciar las ventas de Schneider Electric, que es la

8
00:00:16,640 --> 00:00:19,199
empresa para la cual presto mis

9
00:00:17,760 --> 00:00:22,279
servicios, intentando llegar a un mayor

10
00:00:19,199 --> 00:00:23,640
número de clientes, abaratando los costes,

11
00:00:22,279 --> 00:00:26,840
reduciendo los tiempos de desarrollo,

12
00:00:23,640 --> 00:00:28,960
haciendo el desarrollo más sencillo y

13
00:00:26,840 --> 00:00:30,320
flexibilizando la producción utilizando

14
00:00:28,960 --> 00:00:33,239
tecnologías habilitadoras de la

15
00:00:30,320 --> 00:00:35,320
industria 4.0 que aporten valor añadido

16
00:00:33,239 --> 00:00:37,800
a las máquinas que utilicen el la

17
00:00:35,320 --> 00:00:37,800
herramienta

18
00:00:38,600 --> 00:00:42,520
propuesta. Si echamos un vistazo al

19
00:00:41,039 --> 00:00:43,600
mercado, vemos que existe un gran número

20
00:00:42,520 --> 00:00:45,640
de fabricantes y proveedores de

21
00:00:43,600 --> 00:00:47,199
soluciones robóticas, y que cada uno de

22
00:00:45,640 --> 00:00:49,600
ellos utiliza su propia filosofía de

23
00:00:47,199 --> 00:00:51,480
trabajo. Así, atendiendo a los lenguajes de

24
00:00:49,600 --> 00:00:53,039
programación, vemos que algunos

25
00:00:51,480 --> 00:00:54,840
fabricantes utilizan un lenguaje

26
00:00:53,039 --> 00:00:57,199
propietario. Son lenguajes que han

27
00:00:54,840 --> 00:00:58,559
desarrollado ellos para sus productos.

28
00:00:57,199 --> 00:01:00,320
Están muy bien pensados para las

29
00:00:58,559 --> 00:01:02,800
aplicaciones que quieren atacar, son

30
00:01:00,320 --> 00:01:05,799
lenguajes muy evolucionados, pero que, por

31
00:01:02,800 --> 00:01:07,280
contra, dejan un poco cojo lo que es la

32
00:01:05,799 --> 00:01:09,360
automatización del resto de la máquina.

33
00:01:07,280 --> 00:01:12,479
Son lenguajes que necesitan personal

34
00:01:09,360 --> 00:01:14,640
especializado. Otros fabricantes 

35
00:01:12,479 --> 00:01:16,640
optan por una plataforma única que

36
00:01:14,640 --> 00:01:18,119
integre dos lenguajes: uno para resolver

37
00:01:16,640 --> 00:01:20,720
la parte de automatización de la máquina

38
00:01:18,119 --> 00:01:21,720
y otro para resolver la parte robótica

39
00:01:20,720 --> 00:01:24,439
de la

40
00:01:21,720 --> 00:01:26,119
máquina. Finalmente, existen también otros

41
00:01:24,439 --> 00:01:27,880
fabricantes que utilizan un entorno

42
00:01:26,119 --> 00:01:30,240
de desarrollo único con un lenguaje de

43
00:01:27,880 --> 00:01:31,840
desarrollo también único que sirve tanto

44
00:01:30,240 --> 00:01:33,399
para la parte de automatización como

45
00:01:31,840 --> 00:01:35,360
para la parte

46
00:01:33,399 --> 00:01:37,079
robótica. Con el tema de los

47
00:01:35,360 --> 00:01:38,320
controladores pasa algo similar. Hay

48
00:01:37,079 --> 00:01:41,240
fabricantes que optan por una

49
00:01:38,320 --> 00:01:44,200
arquitectura hardware hecha a medida

50
00:01:41,240 --> 00:01:45,520
para sus productos, y para la

51
00:01:44,200 --> 00:01:47,280
automatización del resto de la máquina

52
00:01:45,520 --> 00:01:50,479
pues prefieren utilizar controladores y

53
00:01:47,280 --> 00:01:51,840
autómatas de otros fabricantes. ¿Qué

54
00:01:50,479 --> 00:01:55,119
ocurre? que cuando se intenta hacer una

55
00:01:51,840 --> 00:01:57,119
máquina completa pues ambos sistemas

56
00:01:55,119 --> 00:01:59,960
tienen que convivir dentro de la

57
00:01:57,119 --> 00:02:01,200
misma máquina y comunicarse de alguna

58
00:01:59,960 --> 00:02:02,960
manera, bien por entradas/salidas

59
00:02:01,200 --> 00:02:03,799
digitales o bien por comunicaciones u

60
00:02:02,960 --> 00:02:06,719
otros

61
00:02:03,799 --> 00:02:08,679
medios. Son soluciones muy caras porque

62
00:02:06,719 --> 00:02:10,239
implican dos arquitecturas distintas

63
00:02:08,679 --> 00:02:12,640
conviviendo con dos lenguajes de

64
00:02:10,239 --> 00:02:14,400
desarrollo distintos. Por eso, hay

65
00:02:12,640 --> 00:02:16,319
fabricantes que optan por una solución

66
00:02:14,400 --> 00:02:18,840
genérica, una arquitectura hardware

67
00:02:16,319 --> 00:02:21,000
genérica que sirva tanto para la parte

68
00:02:18,840 --> 00:02:22,879
robótica como para máquinas que sean

69
00:02:21,000 --> 00:02:24,599
mixtas, que tengan parte robótica y parte

70
00:02:22,879 --> 00:02:26,920
de automatización; máquinas que solo

71
00:02:24,599 --> 00:02:29,280
interese la automatización y máquinas,

72
00:02:26,920 --> 00:02:31,480
pues, del método tradicional que

73
00:02:29,280 --> 00:02:34,680
interese comunicarse con un controlador

74
00:02:31,480 --> 00:02:36,840
externo para la parte

75
00:02:34,680 --> 00:02:38,000
robótica. Bien, ¿qué es lo que se propone?

76
00:02:36,840 --> 00:02:39,959
lo que se propone es utilizar una

77
00:02:38,000 --> 00:02:41,599
arquitectura hardware de tipo genérico,

78
00:02:39,959 --> 00:02:43,599
capaz de abordar tanto las secciones

79
00:02:41,599 --> 00:02:45,360
robóticas de una máquina como el resto

80
00:02:43,599 --> 00:02:48,360
de esta, las que no tienen nada que ver

81
00:02:45,360 --> 00:02:50,560
con la robótica. Esta arquitectura

82
00:02:48,360 --> 00:02:52,599
hardware se programa mediante una

83
00:02:50,560 --> 00:02:54,400
plataforma de desarrollo que sigue el

84
00:02:52,599 --> 00:02:57,519
estándar IEC61131/3,

85
00:02:54,400 --> 00:02:59,120
que es un entorno, pues, que está

86
00:02:57,519 --> 00:03:01,239
bastante, está bastante extendido dentro

87
00:02:59,120 --> 00:03:03,440
del mundo industrial, sobre el

88
00:03:01,239 --> 00:03:05,560
que se monta la solución propuesta,

89
00:03:03,440 --> 00:03:08,400
que se basa en un entorno totalmente

90
00:03:05,560 --> 00:03:12,000
gráfico y parametrizable, de manera que

91
00:03:08,400 --> 00:03:14,599
no haga falta o se utilice lo menos

92
00:03:12,000 --> 00:03:16,640
posible la programación, a fin de poder

93
00:03:14,599 --> 00:03:18,280
acercarnos a todo tipo de

94
00:03:16,640 --> 00:03:19,599
desarrolladores, tanto los que tengan un

95
00:03:18,280 --> 00:03:23,200
alto nivel de programación como los que

96
00:03:19,599 --> 00:03:24,879
no lo tengan tanto. La solución propuesta

97
00:03:23,200 --> 00:03:28,040
incluye, pues, múltiples modos de trabajo

98
00:03:24,879 --> 00:03:29,799
(los más habituales) e incluye múltiples

99
00:03:28,040 --> 00:03:31,640
opciones de simulación para el

100
00:03:29,799 --> 00:03:33,239
comportamiento de la máquina, pues, ante

101
00:03:31,640 --> 00:03:36,360
diversas entradas de producto, tanto en

102
00:03:33,239 --> 00:03:37,560
2D como en 3D. Incluye

103
00:03:36,360 --> 00:03:41,120
funcionalidades de control numérico y

104
00:03:37,560 --> 00:03:43,000
fabricación aditiva y, también de IoT.

105
00:03:41,120 --> 00:03:46,080
Todo esto se describe con más detalle

106
00:03:43,000 --> 00:03:48,360
más adelante. Además, facilidades a

107
00:03:46,080 --> 00:03:49,799
nivel de automatización de manera que

108
00:03:48,360 --> 00:03:51,200
mediante el uso de los lenguajes

109
00:03:49,799 --> 00:03:53,000
clásicos para la automatización de

110
00:03:51,200 --> 00:03:55,680
máquina se puede interactuar de una

111
00:03:53,000 --> 00:03:59,400
forma lo más sencilla posible con

112
00:03:55,680 --> 00:04:01,799
la parte más de robótica. Finalmente,

113
00:03:59,400 --> 00:04:04,760
la arquitectura software sobre la que

114
00:04:01,799 --> 00:04:07,079
se construye la solución propuesta

115
00:04:04,760 --> 00:04:10,319
está basada en un sistema jerárquico

116
00:04:07,079 --> 00:04:11,879
multinivel y totalmente modular, de

117
00:04:10,319 --> 00:04:14,480
manera que la máquina se describe en un

118
00:04:11,879 --> 00:04:16,560
nivel superior. En un nivel intermedio se

119
00:04:14,480 --> 00:04:18,560
van describiendo o se van desarrollando

120
00:04:16,560 --> 00:04:20,320
las distintas secciones de esta máquina y,

121
00:04:18,560 --> 00:04:22,960
en un nivel inferior, pues, los

122
00:04:20,320 --> 00:04:25,600
elementos más de campo como los robots, los

123
00:04:22,960 --> 00:04:27,520
motores, las cintas, etcétera. De esta

124
00:04:25,600 --> 00:04:29,759
manera, somos capaces de abordar todo

125
00:04:27,520 --> 00:04:32,360
tipo de máquinas desde las más sencillas

126
00:04:29,759 --> 00:04:32,360
hasta las más

127
00:04:32,600 --> 00:04:37,919
complejas. En cuanto a los sectores

128
00:04:34,880 --> 00:04:39,440
objetivo, como es imposible abarcar 

129
00:04:37,919 --> 00:04:42,479
todo el espectro de aplicaciones que nos

130
00:04:39,440 --> 00:04:44,600
podemos encontrar en la industria, nos

131
00:04:42,479 --> 00:04:48,320
vamos a centrar solamente en un pequeño

132
00:04:44,600 --> 00:04:49,560
número de sectores. Básicamente, el más

133
00:04:48,320 --> 00:04:51,360
importante que va a cubrir la

134
00:04:49,560 --> 00:04:54,039
herramienta propuesta es el empaquetado

135
00:04:51,360 --> 00:04:56,000
rápido, que es básicamente ir a coger el

136
00:04:54,039 --> 00:04:58,240
producto de un sitio y dejarlo en otro.

137
00:04:56,000 --> 00:05:00,120
También otras aplicaciones clásicas

138
00:04:58,240 --> 00:05:02,759
serían la clasificación, el control de

139
00:05:00,120 --> 00:05:04,960
calidad, el paletizado y se intentará

140
00:05:02,759 --> 00:05:08,960
también tocar algo de material working,

141
00:05:04,960 --> 00:05:11,160
esto es, que el robot vaya a por un

142
00:05:08,960 --> 00:05:13,479
producto y realice una operación sobre

143
00:05:11,160 --> 00:05:15,560
él, por ejemplo, un taladrado, un biselado,

144
00:05:13,479 --> 00:05:17,000
que lo pinte, que dosifique algo

145
00:05:15,560 --> 00:05:19,919
encima de él, etcétera.

146
00:05:17,000 --> 00:05:22,560
Además del uso puramente de

147
00:05:19,919 --> 00:05:24,600
desarrollo puramente industrial, también

148
00:05:22,560 --> 00:05:27,199
se intenta que la herramienta sirva para

149
00:05:24,600 --> 00:05:29,960
tareas de promoción. Es decir, ir a

150
00:05:27,199 --> 00:05:32,080
visitar un cliente, por ejemplo, y

151
00:05:29,960 --> 00:05:34,039
mostrarle, pues, las posibilidades de

152
00:05:32,080 --> 00:05:35,759
su máquina incluso antes de fabricar

153
00:05:34,039 --> 00:05:38,919
la máquina, para convencerle básicamente

154
00:05:35,759 --> 00:05:41,479
de que su solución es posible o, también,

155
00:05:38,919 --> 00:05:45,360
pues que sirva pues para realizar vídeos

156
00:05:41,479 --> 00:05:47,280
divulgativos o otro tipo de

157
00:05:45,360 --> 00:05:49,000
operaciones similares, y también, por

158
00:05:47,280 --> 00:05:49,919
supuesto, para la formación. Es decir, que

159
00:05:49,000 --> 00:05:53,080
sirva

160
00:05:49,919 --> 00:05:54,759
para mostrar las posibilidades de

161
00:05:53,080 --> 00:05:57,840
todo lo que integra la herramienta ¿no? de

162
00:05:54,759 --> 00:06:01,639
lo que es robótica, CNC, IoT, pues a una

163
00:05:57,840 --> 00:06:01,639
nueva generación de técnicos.

164
00:06:02,560 --> 00:06:05,759
Respecto al tipo de robots, la

165
00:06:03,919 --> 00:06:08,560
herramienta propuesta es compatible

166
00:06:05,759 --> 00:06:09,880
únicamente con los de tipo Delta 3D, es

167
00:06:08,560 --> 00:06:11,360
decir, los que se mueven en los tres ejes

168
00:06:09,880 --> 00:06:14,240
cartesianos. Simplemente hemos de indicar

169
00:06:11,360 --> 00:06:16,319
el modelo robot a utilizar y la

170
00:06:14,240 --> 00:06:18,440
herramienta se autoadaptará a todas sus

171
00:06:16,319 --> 00:06:21,840
características, límites software,

172
00:06:18,440 --> 00:06:23,160
etcétera. No obstante, la plataforma de

173
00:06:21,840 --> 00:06:24,479
desarrollo de aplicaciones multirrobot

174
00:06:23,160 --> 00:06:26,160
también podría llegar a trabajar con

175
00:06:24,479 --> 00:06:28,720
otro tipo de robots como los Delta 2D,

176
00:06:26,160 --> 00:06:31,160
los Scara, los cartesianos, algunos

177
00:06:28,720 --> 00:06:33,080
tipos de robots articulados... simplemente

178
00:06:31,160 --> 00:06:37,599
modificando parte de su código para

179
00:06:33,080 --> 00:06:39,039
incluir la transformada adecuada. 

180
00:06:37,599 --> 00:06:40,759
Y luego tenemos otra serie de robots, como

181
00:06:39,039 --> 00:06:42,599
los antropomórficos o, por ejemplo, los

182
00:06:40,759 --> 00:06:45,080
colaborativos, que quedarían totalmente

183
00:06:42,599 --> 00:06:46,960
fuera del alcance de la herramienta

184
00:06:45,080 --> 00:06:49,919
debido a limitaciones hardware y también

185
00:06:46,960 --> 00:06:49,919
software.

186
00:06:50,560 --> 00:06:54,879
Bien, la herramienta incluye una

187
00:06:52,960 --> 00:06:57,360
serie de facilidades para configurar la

188
00:06:54,879 --> 00:06:59,000
aplicación. Las más importantes son 

189
00:06:57,360 --> 00:07:01,400
definir el tipo de robot que se va a

190
00:06:59,000 --> 00:07:03,199
emplear mediante un cómodo listado

191
00:07:01,400 --> 00:07:05,000
que incluye una serie de filtros que, pues,

192
00:07:03,199 --> 00:07:07,560
permiten localizar la referencia más

193
00:07:05,000 --> 00:07:09,800
adecuada. Podemos también modificar el

194
00:07:07,560 --> 00:07:12,000
sistema de coordenadas del robot tanto

195
00:07:09,800 --> 00:07:14,080
lineal como angularmente.

196
00:07:12,000 --> 00:07:16,680
Por supuesto también podemos hacer lo

197
00:07:14,080 --> 00:07:18,759
mismo con el TCP (el punto central de la

198
00:07:16,680 --> 00:07:20,080
herramienta) que, originalmente, se

199
00:07:18,759 --> 00:07:22,240
encuentra en el centro del plato donde

200
00:07:20,080 --> 00:07:23,759
se va a mecanizar pero que podemos,

201
00:07:22,240 --> 00:07:27,199
pues, desplazar, por ejemplo, para que

202
00:07:23,759 --> 00:07:30,240
coincida con la superficie una

203
00:07:27,199 --> 00:07:32,080
ventosa. Naturalmente también las dos

204
00:07:30,240 --> 00:07:34,879
cintas, la cinta de recogida y la cinta

205
00:07:32,080 --> 00:07:39,319
de entrega, pueden ser modificadas

206
00:07:34,879 --> 00:07:42,680
indicando, pues, su sentido de avance y su

207
00:07:39,319 --> 00:07:42,680
posición respecto al centro del

208
00:07:43,000 --> 00:07:48,440
robot. En cuanto a las cintas, podemos

209
00:07:46,080 --> 00:07:51,680
modificar sus dimensiones (su largo, su

210
00:07:48,440 --> 00:07:53,400
ancho) y también ciertas zonas críticas

211
00:07:51,680 --> 00:07:55,159
de las mismas, por ejemplo, la zona de

212
00:07:53,400 --> 00:07:56,360
trabajo que va a utilizar el robot, tanto

213
00:07:55,159 --> 00:07:58,879
para recoger producto como para

214
00:07:56,360 --> 00:08:00,800
entregarlo y algunas zonas de calidad

215
00:07:58,879 --> 00:08:02,840
que van a utilizadas para comprobar si

216
00:08:00,800 --> 00:08:05,919
el producto procesado es OK o no es OK

217
00:08:02,840 --> 00:08:07,319
y, también, pues evidentemente, los

218
00:08:05,919 --> 00:08:11,120
límites software de cada uno de los

219
00:08:07,319 --> 00:08:11,120
robots para evitar que el robot las

220
00:08:12,560 --> 00:08:16,080
atraviese. También se incluyen una serie

221
00:08:14,800 --> 00:08:18,120
de funcionalidades para el ajuste de la

222
00:08:16,080 --> 00:08:20,800
cámara de visión. Para ello se hace uso

223
00:08:18,120 --> 00:08:23,360
de un ejemplo real utilizando una cámara

224
00:08:20,800 --> 00:08:24,599
de visión Cognex conectada al

225
00:08:23,360 --> 00:08:27,400
controlador mediante un bus de campo

226
00:08:24,599 --> 00:08:29,520
EthernetIP. Mediante el uso de un panel

227
00:08:27,400 --> 00:08:31,960
específico y un procedimiento descrito

228
00:08:29,520 --> 00:08:34,320
en la memoria técnica, es posible

229
00:08:31,960 --> 00:08:36,519
encontrar el cero de coordenadas de

230
00:08:34,320 --> 00:08:39,039
cada una de las cámaras utilizadas y

231
00:08:36,519 --> 00:08:42,039
ver su alineación respecto al sistema de

232
00:08:39,039 --> 00:08:43,839
coordenadas del robot, tanto lineal como

233
00:08:42,039 --> 00:08:45,760
angularmente.

234
00:08:43,839 --> 00:08:48,320
Existen una serie de parámetros, también,

235
00:08:45,760 --> 00:08:51,200
que permiten ajustar el disparo de

236
00:08:48,320 --> 00:08:53,800
la cámara, por ejemplo, cada cierto

237
00:08:51,200 --> 00:08:56,240
avance de la cinta a la que se asociada y

238
00:08:53,800 --> 00:09:00,079
también el ancho del pulso de

239
00:08:56,240 --> 00:09:02,200
disparo. Y finalmente, indirectamente

240
00:09:00,079 --> 00:09:04,560
relacionado con este tema, existen

241
00:09:02,200 --> 00:09:09,279
también unos parámetros que nos permiten

242
00:09:04,560 --> 00:09:11,839
descentrar el punto de cogida del

243
00:09:09,279 --> 00:09:12,959
ítem un poquito a la derecha, un

244
00:09:11,839 --> 00:09:15,120
poquito a la izquierda, o con cierto

245
00:09:12,959 --> 00:09:18,120
ángulo ¿vale? Es aplicar una serie de

246
00:09:15,120 --> 00:09:20,320
offsets para intentar corregir

247
00:09:18,120 --> 00:09:23,399
cualquier posible pequeño error de la

248
00:09:20,320 --> 00:09:25,519
cámara o bien porque nos interese no ir

249
00:09:23,399 --> 00:09:30,240
al centro sino a una posición determinada

250
00:09:25,519 --> 00:09:30,240
tal como se ve aquí, en en estos dibujos.

251
00:09:30,720 --> 00:09:35,360
por supuesto también se incluyen muchas

252
00:09:32,440 --> 00:09:37,720
funcionalidades manuales, sobre todo

253
00:09:35,360 --> 00:09:39,959
útiles durante los inicios de las

254
00:09:37,720 --> 00:09:42,200
puestas en marcha para comprobar, pues,

255
00:09:39,959 --> 00:09:44,680
los sentidos del movimiento, si los

256
00:09:42,200 --> 00:09:46,959
motores corresponden con los ejes,

257
00:09:44,680 --> 00:09:48,720
etcétera. Las más habituales son los

258
00:09:46,959 --> 00:09:51,600
movimientos de los propios ejes, es decir,

259
00:09:48,720 --> 00:09:53,440
el propio rotor del motor, los

260
00:09:51,600 --> 00:09:55,600
movimientos de los ejes cartesianos para

261
00:09:53,440 --> 00:09:57,560
comprobar si realmente, cuando le

262
00:09:55,600 --> 00:10:00,240
damos a mover en X o en Y, se mueven en

263
00:09:57,560 --> 00:10:03,399
esos sentidos. Podemos definir

264
00:10:00,240 --> 00:10:04,399
velocidad, rampas, comprobar el estado

265
00:10:03,399 --> 00:10:06,800
del

266
00:10:04,399 --> 00:10:09,760
sistema, podemos memorizar una serie de

267
00:10:06,800 --> 00:10:12,040
puntos para formar a través de ellos una

268
00:10:09,760 --> 00:10:14,160
determinada trayectoria. Una vez

269
00:10:12,040 --> 00:10:16,160
memorizados estos puntos, podemos

270
00:10:14,160 --> 00:10:17,160
movernos a través de la trayectoria

271
00:10:16,160 --> 00:10:21,279
que

272
00:10:17,160 --> 00:10:23,000
forman. Podemos obtener información sobre

273
00:10:21,279 --> 00:10:26,120
la trayectoria formada, por ejemplo, su

274
00:10:23,000 --> 00:10:28,760
longitud, dada cierta velocidad, cuánto

275
00:10:26,120 --> 00:10:30,279
tiempo falta para concluirla y también

276
00:10:28,760 --> 00:10:33,200
información de los segmentos que se

277
00:10:30,279 --> 00:10:33,200
encuentran en el almacén de

278
00:10:33,880 --> 00:10:38,200
trayectorias. También se incluye un panel

279
00:10:36,320 --> 00:10:40,120
al que se le llamado "aprendizaje" y que

280
00:10:38,200 --> 00:10:42,200
sirve para comprobar el correcto

281
00:10:40,120 --> 00:10:44,279
funcionamiento del robot ya de una forma

282
00:10:42,200 --> 00:10:47,000
más automatizada, menos manual.

283
00:10:44,279 --> 00:10:48,560
Desde este panel, que también está

284
00:10:47,000 --> 00:10:49,360
compartido con ciertas operaciones en

285
00:10:48,560 --> 00:10:52,079
modo

286
00:10:49,360 --> 00:10:54,560
manual, podemos, como os he comentado

287
00:10:52,079 --> 00:10:56,440
anteriormente, memorizar los puntos

288
00:10:54,560 --> 00:10:59,519
destino de cada uno de los segmentos que

289
00:10:56,440 --> 00:11:03,160
conformarán una trayectoria. A partir de

290
00:10:59,519 --> 00:11:05,519
ahí, una vez definidos estos puntos, podemos ir

291
00:11:03,160 --> 00:11:07,600
ejecutando o ir ordenando el

292
00:11:05,519 --> 00:11:09,120
desplazamiento del robot a cada uno

293
00:11:07,600 --> 00:11:11,320
de estos

294
00:11:09,120 --> 00:11:15,120
puntos. Si lo hacemos suficientemente

295
00:11:11,320 --> 00:11:18,000
deprisa, podemos con ellos formar una

296
00:11:15,120 --> 00:11:19,360
trayectoria. Igualmente, del mismo modo

297
00:11:18,000 --> 00:11:20,839
que se ha hecho en el modo manual,

298
00:11:19,360 --> 00:11:24,040
podemos obtener información de la

299
00:11:20,839 --> 00:11:25,760
trayectoria y, lo más interesante, es que

300
00:11:24,040 --> 00:11:29,320
podemos automatizar esta trayectoria.

301
00:11:25,760 --> 00:11:34,079
Podemos hacer ciclos repetitivos de ir,

302
00:11:29,320 --> 00:11:36,160
dejar, volver, coger, volver, dejar,

303
00:11:34,079 --> 00:11:40,079
incluyendo los tiempos de apertura y

304
00:11:36,160 --> 00:11:43,519
cierre de la pinza para comprobar

305
00:11:40,079 --> 00:11:46,399
si el ciclo que obtenemos es el que

306
00:11:43,519 --> 00:11:47,720
desea el cliente. Y también, por

307
00:11:46,399 --> 00:11:49,839
supuesto, tenemos una serie de parámetros

308
00:11:47,720 --> 00:11:51,839
para modificar las velocidades, tanto de

309
00:11:49,839 --> 00:11:55,320
ida como de vuelta como, bueno, cualquier

310
00:11:51,839 --> 00:11:55,320
tipo de de parámetro

311
00:11:56,079 --> 00:12:00,040
cinemático. Como no podía ser de otro

312
00:11:58,279 --> 00:12:02,200
modo, también existen múltiples

313
00:12:00,040 --> 00:12:04,000
funcionalidades de simulación, entre

314
00:12:02,200 --> 00:12:06,200
ellas está definir, por ejemplo, el número

315
00:12:04,000 --> 00:12:08,639
de ítems que se van a generar en cada

316
00:12:06,200 --> 00:12:10,839
disparo. Tenemos dos modos de

317
00:12:08,639 --> 00:12:13,480
simulación: el modo, digamos, que manual,

318
00:12:10,839 --> 00:12:15,680
cada vez que pulsemos un botón, o el modo

319
00:12:13,480 --> 00:12:18,240
automático, esto es, utilizar los mismos

320
00:12:15,680 --> 00:12:21,639
parámetros que utilizaría la cámara real

321
00:12:18,240 --> 00:12:24,160
en cuanto al avance de la cinta para generar

322
00:12:21,639 --> 00:12:27,040
los disparos del simulador. Podemos

323
00:12:24,160 --> 00:12:30,560
definir la aleatoriedad de los ítems

324
00:12:27,040 --> 00:12:32,760
que se van a generar y utilizar los

325
00:12:30,560 --> 00:12:35,040
parámetros de disparo de la cámara real

326
00:12:32,760 --> 00:12:36,600
para disparar el simulador. De este modo,

327
00:12:35,040 --> 00:12:38,959
por ejemplo,

328
00:12:36,600 --> 00:12:41,639
podemos comprobar de una forma muy

329
00:12:38,959 --> 00:12:44,160
sencilla el comportamiento de la máquina

330
00:12:41,639 --> 00:12:47,360
según la llegada de ítems, tal como nos

331
00:12:44,160 --> 00:12:47,360
describa el cliente que van a

332
00:12:48,240 --> 00:12:52,480
llegar. Entre las funciones de

333
00:12:50,760 --> 00:12:54,120
configuración del modo automático, si

334
00:12:52,480 --> 00:12:55,639
bien no se cubren el 100% de las

335
00:12:54,120 --> 00:12:58,279
posibilidades que nos podemos encontrar

336
00:12:55,639 --> 00:13:00,639
en la industria, si se tiene en cuenta

337
00:12:58,279 --> 00:13:04,199
las más importantes. Por ejemplo, se

338
00:13:00,639 --> 00:13:06,560
incluyen tres tipos de operación: modo

339
00:13:04,199 --> 00:13:09,040
pick and place, modo giro asíncrono y modo CNC.

340
00:13:06,560 --> 00:13:10,920
Se incluyen diversas reglas de selección

341
00:13:09,040 --> 00:13:13,320
para que el robot sea capaz de priorizar

342
00:13:10,920 --> 00:13:15,760
el ítem a procesar entre varios

343
00:13:13,320 --> 00:13:19,320
disponibles. Existen tres tipos de

344
00:13:15,760 --> 00:13:22,240
entrega: la entrega a punto fijo, que nos

345
00:13:19,320 --> 00:13:25,600
permite realizar mosaicos; la entrega en

346
00:13:22,240 --> 00:13:28,000
caja, que nos permite obtener un ítem

347
00:13:25,600 --> 00:13:29,720
de la cinta de recogida e introducirlo

348
00:13:28,000 --> 00:13:32,320
en una caja en movimiento, que se encuentre

349
00:13:29,720 --> 00:13:35,399
también o pueda poseer distintos ángulos

350
00:13:32,320 --> 00:13:38,199
y posiciones; y la entrega en cinta de

351
00:13:35,399 --> 00:13:41,240
cangilones, una cinta sin fin con una

352
00:13:38,199 --> 00:13:42,760
serie de huecos y el robot debe coger

353
00:13:41,240 --> 00:13:44,959
un ítem de la cinta de recogida y

354
00:13:42,760 --> 00:13:47,880
entregarlo en un hueco

355
00:13:44,959 --> 00:13:50,279
libre. En el caso de que se tengan o se

356
00:13:47,880 --> 00:13:53,360
utilice más de un robot, existen

357
00:13:50,279 --> 00:13:56,000
tipos de reparto de carga para que la

358
00:13:53,360 --> 00:13:58,240
carga se reparta entre los dos 

359
00:13:56,000 --> 00:14:00,120
robots por igual. Podemos

360
00:13:58,240 --> 00:14:02,720
hacerlo por zona de la cinta en la

361
00:14:00,120 --> 00:14:05,279
que circula el ítem, asignando cada zona a

362
00:14:02,720 --> 00:14:08,120
un robot, o por la categoría del propio

363
00:14:05,279 --> 00:14:11,440
ítem asignando una categoría u otra a un

364
00:14:08,120 --> 00:14:13,079
robot u otro. Y por supuesto, tenemos la

365
00:14:11,440 --> 00:14:15,959
configuración de la

366
00:14:13,079 --> 00:14:18,320
trayectoria tanto a nivel de posiciones

367
00:14:15,959 --> 00:14:18,320
como de

368
00:14:20,120 --> 00:14:25,240
velocidades. La herramienta propuesta es

369
00:14:22,639 --> 00:14:27,000
compatible con un programa externo que se

370
00:14:25,240 --> 00:14:28,399
encarga de visualizar en tres

371
00:14:27,000 --> 00:14:29,839
dimensiones el comportamiento de la

372
00:14:28,399 --> 00:14:31,680
máquina.

373
00:14:29,839 --> 00:14:33,240
Este programa externo, de momento,

374
00:14:31,680 --> 00:14:36,079
solamente es compatible con robots Scara

375
00:14:33,240 --> 00:14:38,600
y Delta, algunas formas primitivas de,

376
00:14:36,079 --> 00:14:42,320
para, digamos, formar los ítems (cubos,

377
00:14:38,600 --> 00:14:44,360
esferas, cilindros), y la visualización

378
00:14:42,320 --> 00:14:48,360
de cintas, de cintas

379
00:14:44,360 --> 00:14:48,360
transportadoras.

380
00:15:01,360 --> 00:15:05,560
Permite, por ejemplo, ver el espacio de

381
00:15:04,120 --> 00:15:09,519
trabajo del robot, que sería esta parte

382
00:15:05,560 --> 00:15:11,920
de aquí. Permite visualizar la

383
00:15:09,519 --> 00:15:14,160
trayectoria del TCP del robot, aunque

384
00:15:11,920 --> 00:15:16,399
aquí no se vea del todo bien, pero se ve

385
00:15:14,160 --> 00:15:19,120
que a medida que el robot se mueve se va

386
00:15:16,399 --> 00:15:21,079
creando como una especie como de... como de

387
00:15:19,120 --> 00:15:24,160
huella ¿no?, como de

388
00:15:21,079 --> 00:15:26,639
trayectoria. Y finalmente nos muestra una

389
00:15:24,160 --> 00:15:30,199
serie de información básica del robot, su

390
00:15:26,639 --> 00:15:32,880
posición básicamente y poco

391
00:15:30,199 --> 00:15:34,279
más. Esto es especialmente útil en

392
00:15:32,880 --> 00:15:37,160
acciones de

393
00:15:34,279 --> 00:15:39,399
formación, de promoción y de desarrollo

394
00:15:37,160 --> 00:15:41,199
offline porque nos permite ver un poco

395
00:15:39,399 --> 00:15:44,000
qué es lo que va a hacer la máquina

396
00:15:41,199 --> 00:15:46,480
antes de tener la

397
00:15:44,000 --> 00:15:48,079
máquina. La herramienta propuesta cuenta

398
00:15:46,480 --> 00:15:49,440
con una serie de funcionalidades más

399
00:15:48,079 --> 00:15:51,680
propias a otros campos como el control

400
00:15:49,440 --> 00:15:53,360
numérico o la fabricación aditiva. Esto

401
00:15:51,680 --> 00:15:55,440
se ha hecho para dotarla de una mayor

402
00:15:53,360 --> 00:15:57,920
flexibilidad productiva. En una

403
00:15:55,440 --> 00:15:59,440
aplicación robótica estándar lo que

404
00:15:57,920 --> 00:16:00,920
suele suceder es que las trayectorias

405
00:15:59,440 --> 00:16:02,720
suelen estar preprogramadas en el

406
00:16:00,920 --> 00:16:04,680
interior del controlador de modo que, si

407
00:16:02,720 --> 00:16:06,360
las deseamos modificar, hemos de

408
00:16:04,680 --> 00:16:08,800
modificar el programa del controlador.

409
00:16:06,360 --> 00:16:10,920
Aquí lo que se pretende es poder

410
00:16:08,800 --> 00:16:14,079
tener cierta libertad para

411
00:16:10,920 --> 00:16:16,959
añadir nuevas trayectorias al sistema

412
00:16:14,079 --> 00:16:20,519
a fin de, por ejemplo, coger una pieza 

413
00:16:16,959 --> 00:16:22,959
original y mecanizarla con formas

414
00:16:20,519 --> 00:16:24,639
distintas, formas que no han sido

415
00:16:22,959 --> 00:16:26,680
preestablecidas previamente en el

416
00:16:24,639 --> 00:16:28,440
controlador. También nos interesa

417
00:16:26,680 --> 00:16:30,199
interactuar con la herramienta para

418
00:16:28,440 --> 00:16:32,720
activar/desactivarla en distintos puntos

419
00:16:30,199 --> 00:16:36,199
de la nueva trayectoria

420
00:16:32,720 --> 00:16:38,800
creada. Con este tipo de de flexibilidad

421
00:16:36,199 --> 00:16:40,680
de programación, lo que podemos hacer es

422
00:16:38,800 --> 00:16:42,759
cosas como, por ejemplo, dibujar

423
00:16:40,680 --> 00:16:44,959
patrones encima de, por ejemplo, de

424
00:16:42,759 --> 00:16:47,880
empanadas simplemente para determinar

425
00:16:44,959 --> 00:16:50,319
cuál es su relleno. Aquí tenemos algunos

426
00:16:47,880 --> 00:16:51,800
ejemplos. Para realizar este tipo de

427
00:16:50,319 --> 00:16:53,560
operaciones se utiliza un lenguaje

428
00:16:51,800 --> 00:16:55,480
comúnmente utilizado en el control

429
00:16:53,560 --> 00:16:57,720
numérico o la fabricación aditiva que se

430
00:16:55,480 --> 00:16:57,720
llama G-code.

431
00:16:57,839 --> 00:17:03,040
Mediante el uso de este lenguaje,

432
00:17:00,959 --> 00:17:06,199
podemos simplemente programar una

433
00:17:03,040 --> 00:17:07,880
secuencia de órdenes, de trayectorias

434
00:17:06,199 --> 00:17:10,760
y de activaciones o desactivaciones de la

435
00:17:07,880 --> 00:17:12,720
herramienta en un fichero de texto para

436
00:17:10,760 --> 00:17:14,720
luego introducirlo en el controlador vía,

437
00:17:12,720 --> 00:17:17,959
por ejemplo, un servidor

438
00:17:14,720 --> 00:17:21,039
FTP. Con esto modificaríamos la trayectoria

439
00:17:17,959 --> 00:17:23,039
seguida por el robot pero, además, también

440
00:17:21,039 --> 00:17:24,799
los momentos en los cuales se activa y

441
00:17:23,039 --> 00:17:26,880
desactiva la

442
00:17:24,799 --> 00:17:30,559
herramienta.

443
00:17:26,880 --> 00:17:32,000
Además, tenemos la posibilidad de decidir

444
00:17:30,559 --> 00:17:33,440
cuánto tiempo tiene que transcurrir

445
00:17:32,000 --> 00:17:34,720
desde que se activa o desactiva la

446
00:17:33,440 --> 00:17:36,480
herramienta hasta que el movimiento

447
00:17:34,720 --> 00:17:39,039
continúa. Esto nos da una gran

448
00:17:36,480 --> 00:17:41,520
flexibilidad a la hora de crear nuevas

449
00:17:39,039 --> 00:17:44,520
trayectorias o nuevas operaciones sobre

450
00:17:41,520 --> 00:17:44,520
el objeto a

451
00:17:44,600 --> 00:17:48,799
procesar. En cuanto a las funcionalidades

452
00:17:46,960 --> 00:17:51,400
IoT, la aplicación garantiza un canal de

453
00:17:48,799 --> 00:17:53,520
comunicaciones con el exterior basado en

454
00:17:51,400 --> 00:17:54,919
OPC UA por ser uno de los protocolos más

455
00:17:53,520 --> 00:17:56,919
comúnmente utilizados en el mundo

456
00:17:54,919 --> 00:17:58,960
industrial. A través de este canal de

457
00:17:56,919 --> 00:18:00,080
comunicaciones podemos publicar una

458
00:17:58,960 --> 00:18:03,039
serie de datos extraídos de la

459
00:18:00,080 --> 00:18:04,559
aplicación, por ejemplo, el número de

460
00:18:03,039 --> 00:18:06,880
operaciones realizadas correctamente por

461
00:18:04,559 --> 00:18:09,080
el robot, su recorrido

462
00:18:06,880 --> 00:18:12,360
acumulado, el tiempo que lleva en modo

463
00:18:09,080 --> 00:18:14,200
automático, por ejemplo, o produciendo. Y a

464
00:18:12,360 --> 00:18:16,360
partir de aquí se suministran también

465
00:18:14,200 --> 00:18:18,799
una serie de ejemplos para manipular

466
00:18:16,360 --> 00:18:20,919
esta información del controlador

467
00:18:18,799 --> 00:18:25,280
desde, por ejemplo, un gateway en Node-RED

468
00:18:20,919 --> 00:18:28,840
y publicarla vía protocolo MQTT, pues,

469
00:18:25,280 --> 00:18:30,520
hacia un software basado en nube. 

470
00:18:28,840 --> 00:18:32,919
También se suministra el ejemplo de este,

471
00:18:30,520 --> 00:18:35,159
de uso de un software basado en nube, un

472
00:18:32,919 --> 00:18:36,960
software de Schneider Electric para

473
00:18:35,159 --> 00:18:38,840
realizar operaciones de supervisión de

474
00:18:36,960 --> 00:18:41,280
la producción, de la productividad de 

475
00:18:38,840 --> 00:18:42,919
cada uno de los robots, temas de

476
00:18:41,280 --> 00:18:44,799
mantenimiento para ver qué robot

477
00:18:42,919 --> 00:18:46,919
necesita un mantenimiento antes que otro,

478
00:18:44,799 --> 00:18:50,400
basándose, pues, por ejemplo, en el número de

479
00:18:46,919 --> 00:18:52,520
maniobras o en la distancia recorrida.

480
00:18:50,400 --> 00:18:55,400
Y finalmente, como extra,

481
00:18:52,520 --> 00:18:58,760
se facilita también algún ejemplo de uso

482
00:18:55,400 --> 00:19:00,799
de APIs para reporting. Casi todo

483
00:18:58,760 --> 00:19:03,080
los softwares basados en la nube contienen

484
00:19:00,799 --> 00:19:06,080
algún tipo de acceso a la información

485
00:19:03,080 --> 00:19:09,480
histórica que contienen. En este caso, el

486
00:19:06,080 --> 00:19:10,840
software utilizado, pues, tiene un API y, a

487
00:19:09,480 --> 00:19:13,679
través de un lenguaje de interrogación

488
00:19:10,840 --> 00:19:17,280
que se llama GraphQL, podemos desde Node-RED

489
00:19:13,679 --> 00:19:19,760
extraer información de la nube y

490
00:19:17,280 --> 00:19:23,720
grabarla en un fichero CSV. Luego, este

491
00:19:19,760 --> 00:19:25,559
fichero CSV podemos abrirlo en Excel y

492
00:19:23,720 --> 00:19:28,000
analizar los datos que hemos

493
00:19:25,559 --> 00:19:29,679
decidido leer de la nube. También podemos

494
00:19:28,000 --> 00:19:32,760
hacer lo mismo con, directamente

495
00:19:29,679 --> 00:19:36,360
desde Excel, desde una maniobra realizada

496
00:19:32,760 --> 00:19:38,360
en visual Basic para

497
00:19:36,360 --> 00:19:41,559
aplicaciones. Las posibilidades son

498
00:19:38,360 --> 00:19:44,200
infinitas y la verdad es que es muy

499
00:19:41,559 --> 00:19:47,320
difícil sintetizarlo todo en una, un par

500
00:19:44,200 --> 00:19:47,320
de slides.

